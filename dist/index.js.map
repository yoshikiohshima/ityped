{"version":3,"file":"index.js","sources":["../src/index.js"],"sourcesContent":["/**\n * @name setProps\n * @description Set the ityped properties configuration\n * @param {Object} config The configuration properties\n * @return {Promise}\n */\nconst setProps = ({\n  typeSpeed = 100,\n  backSpeed = 50,\n  backDelay = 500,\n  startDelay = 500,\n  cursorChar = '|',\n  showCursor = true,\n  disableBackTyping = false,\n  onFinished = function () { },\n  loop = true\n}) => ({\n  typeSpeed,\n  backSpeed,\n  cursorChar,\n  backDelay,\n  startDelay,\n  showCursor,\n  loop,\n  disableBackTyping,\n  onFinished\n})\n\nexport const init = (element, properties) => {\n    let i = 0, l, WORK_TO_DO;\n    let state = {}; // {id: {pos: number}}\n    let text = \"\";\n    \n    const typewrite = (work, props) => {\n        if (i === 1)\n            if (props.loop) i = 0;\n        setTimeout(() => { typeString(work, props); }, props.startDelay);\n    }\n\n    const typeString = (work, props) => {\n        let index = 0;\n        let workLen = work.length;\n        let intervalID = setInterval(() => {\n            doWork(work[index++], props);\n            if (index === workLen) {\n                onStringTyped(intervalID, props);\n            }\n        }, props.typeSpeed);\n    }\n\n    const makeSpans = () => {\n        let result = [];\n        for (let i = 0; i < text.length; i++) {\n            let span = document.createElement(\"span\");\n            span.textContent = text[i];\n            result.push(span);\n        }\n        return result;\n    }\n\n    const doWork = (workArray, props) => {\n        workArray.forEach(work => {\n            let id = `${work.id}`;\n            if (!state[id]) {\n                state[id] = {pos: 0};\n            }\n\n            if (work.append !== undefined) {\n                let before = text.slice(0, state[id].pos);\n                let after = text.slice(state[id].pos);\n                text = before + work.append + after;\n                state[id].pos++;\n                Object.keys(state).forEach(key => {\n                    if (key === id) {return;}\n                    if (state[key].pos >= state[id].pos)\n                        state[key].pos++;\n                });\n            }\n            if (work.goto !== undefined) {\n                state[id].pos = work.goto;\n            }\n            if (work.backspace !== undefined) {\n                let before = text.slice(0, state[id].pos - 1);\n                let after = text.slice(state[id].pos);\n                text = before + after;\n                state[id].pos--;\n                Object.keys(state).forEach(key => {\n                    if (key === id) {return;}\n                    if (state[key].pos >= state[id].pos)\n                        state[key].pos--;\n                });\n                \n            }\n        });\n        while (element.lastChild) {\n            element.lastChild.remove();\n        }\n        makeSpans().forEach(s => \n            element.appendChild(s)\n        )\n        positionCursors();\n    }\n \n    const onStringTyped = (id, props) => {\n        clearInterval(id);\n        if (props.disableBackTyping) {\n            return props.onFinished()\n        }\n        if (!props.loop) {\n            return props.onFinished();\n        }\n        setTimeout(() => eraseString(props), props.backDelay);\n    }\n\n    const eraseString = (props) => {\n        let w = [{id: 0, backspace: 1}]\n        let intervalID = setInterval(() => {\n            doWork(w, props);\n            if (text.length === 0) return onStringErased(intervalID, props);\n        }, props.backSpeed);\n    }\n\n    const clearState = () => {\n        Object.keys(state).forEach(key => {\n            let s = state[key];\n            if (s.cursor) {\n                s.cursor.remove();\n                s.cursor = null;\n            }\n        });\n        state = {};\n        text = \"\";\n    }\n\n    const onStringErased = (id, props) => {\n        clearInterval(id);\n        ++i;\n        clearState();\n        typewrite(WORK_TO_DO, props);\n    }\n\n    const positionCursors = () => {\n        let eRect = element.parentNode.getBoundingClientRect();\n        Object.keys(state).forEach(key => {\n            let s = state[key];\n            if (!s.cursor) {\n                s.cursor = document.createElement('span');\n                s.cursor.classList.add('ityped-cursor');\n                s.cursor.classList.add(`ityped-cursor-${key}`);\n                s.cursor.textContent = \"|\";\n                s.cursor.width = \"0\";\n                s.cursor.style.position = \"relative\";\n                s.cursor.style.fontWeight = 800;\n                let cursors = document.querySelector(\"#ityped-cursors\");\n                cursors.appendChild(s.cursor);\n            }\n            let span = s.pos === 0 ? null : element.childNodes[s.pos - 1];\n            let rect = span ? span.getBoundingClientRect() : {right: 0}\n            let cRect = s.cursor.getBoundingClientRect();\n            let keyNum = parseFloat(key);\n            s.cursor.style.left = `${rect.right - (cRect.width * 0.5) - (keyNum * cRect.width) - eRect.left}px`;\n            s.cursor.style.top = `${rect.top - eRect.top}px`;\n            s.cursor.style.height = `${eRect.height}px`;\n        })\n    }\n        \n    const startTyping = (prop) => {\n        let props = setProps(prop || {})\n        let work = prop.work\n\n        WORK_TO_DO = work;\n        if (typeof element === \"string\") element = document.querySelector(element)\n        // if (props.showCursor) setCursor(element, props)\n        typewrite(WORK_TO_DO, props)\n    }\n    return startTyping(properties)\n}\n\n// window.ityped = {init};\n"],"names":["setProps","typeSpeed","backSpeed","backDelay","startDelay","cursorChar","showCursor","disableBackTyping","onFinished","loop","init","element","properties","i","l","WORK_TO_DO","state","text","typewrite","work","props","typeString","index","workLen","length","intervalID","setInterval","makeSpans","result","span","document","createElement","textContent","push","doWork","workArray","forEach","id","pos","append","undefined","before","slice","after","keys","key","goto","backspace","lastChild","remove","appendChild","s","onStringTyped","eraseString","w","onStringErased","clearState","cursor","positionCursors","eRect","parentNode","getBoundingClientRect","classList","add","width","style","position","fontWeight","cursors","querySelector","childNodes","rect","right","cRect","keyNum","parseFloat","left","top","height","startTyping","prop"],"mappings":"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"}